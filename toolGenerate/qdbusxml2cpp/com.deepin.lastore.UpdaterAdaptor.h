/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.lastore.Updater.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.UpdaterAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.Updater.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_LASTORE_UPDATERADAPTOR_H
#define COM_DEEPIN_LASTORE_UPDATERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.Updater.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.lastore.Updater
 */
class UpdaterAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.lastore.Updater")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.lastore.Updater\">\n"
"    <method name=\"ApplicationUpdateInfos\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"a(sssss)\"/>\n"
"      <annotation value=\"AppUpdateInfoList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"ListMirrorSources\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"a(sss)\"/>\n"
"      <annotation value=\"MirrorInfoList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"SetAutoCheckUpdates\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"SetAutoDownloadUpdates\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"SetMirrorSource\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SetUpdateNotify\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"GetCheckIntervalAndTime\">\n"
"      <arg direction=\"out\" type=\"d\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"AutoInstallUpdates\"/>\n"
"    <property access=\"read\" type=\"t\" name=\"AutoInstallUpdateType\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"AutoCheckUpdates\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"MirrorSource\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"UpdatableApps\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"AutoDownloadUpdates\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"UpdatablePackages\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"UpdateNotify\"/>\n"
"    <property access=\"read\" type=\"a{sd}\" name=\"ClassifiedUpdatablePackages\">\n"
"      <annotation value=\"LastoreUpdatePackagesInfo\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"  </interface>\n"
        "")
public:
    UpdaterAdaptor(QObject *parent);
    virtual ~UpdaterAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool AutoCheckUpdates READ autoCheckUpdates)
    bool autoCheckUpdates() const;

    Q_PROPERTY(bool AutoDownloadUpdates READ autoDownloadUpdates)
    bool autoDownloadUpdates() const;

    Q_PROPERTY(qulonglong AutoInstallUpdateType READ autoInstallUpdateType)
    qulonglong autoInstallUpdateType() const;

    Q_PROPERTY(bool AutoInstallUpdates READ autoInstallUpdates WRITE setAutoInstallUpdates)
    bool autoInstallUpdates() const;
    void setAutoInstallUpdates(bool value);

    Q_PROPERTY(LastoreUpdatePackagesInfo ClassifiedUpdatablePackages READ classifiedUpdatablePackages)
    LastoreUpdatePackagesInfo classifiedUpdatablePackages() const;

    Q_PROPERTY(QString MirrorSource READ mirrorSource)
    QString mirrorSource() const;

    Q_PROPERTY(QStringList UpdatableApps READ updatableApps)
    QStringList updatableApps() const;

    Q_PROPERTY(QStringList UpdatablePackages READ updatablePackages)
    QStringList updatablePackages() const;

    Q_PROPERTY(bool UpdateNotify READ updateNotify)
    bool updateNotify() const;

public Q_SLOTS: // METHODS
    AppUpdateInfoList ApplicationUpdateInfos(const QString &in0);
    double GetCheckIntervalAndTime(QString &out1);
    MirrorInfoList ListMirrorSources(const QString &in0);
    void SetAutoCheckUpdates(bool in0);
    void SetAutoDownloadUpdates(bool in0);
    void SetMirrorSource(const QString &in0);
    void SetUpdateNotify(bool in0);
Q_SIGNALS: // SIGNALS
};

#endif
