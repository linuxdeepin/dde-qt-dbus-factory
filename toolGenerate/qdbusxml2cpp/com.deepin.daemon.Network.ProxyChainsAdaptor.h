/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Network.ProxyChains.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChainsAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChains.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_NETWORK_PROXYCHAINSADAPTOR_H
#define COM_DEEPIN_DAEMON_NETWORK_PROXYCHAINSADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChains.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.Network.ProxyChains
 */
class ProxyChainsAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.Network.ProxyChains")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.Network.ProxyChains\">\n"
"    <method name=\"Set\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"u\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <property access=\"read\" type=\"s\" name=\"Type\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"IP\"/>\n"
"    <property access=\"read\" type=\"u\" name=\"Port\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"User\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Password\"/>\n"
"  </interface>\n"
        "")
public:
    ProxyChainsAdaptor(QObject *parent);
    virtual ~ProxyChainsAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString IP READ iP)
    QString iP() const;

    Q_PROPERTY(QString Password READ password)
    QString password() const;

    Q_PROPERTY(uint Port READ port)
    uint port() const;

    Q_PROPERTY(QString Type READ type)
    QString type() const;

    Q_PROPERTY(QString User READ user)
    QString user() const;

public Q_SLOTS: // METHODS
    void Set(const QString &in0, const QString &in1, uint in2, const QString &in3, const QString &in4);
Q_SIGNALS: // SIGNALS
};

#endif
