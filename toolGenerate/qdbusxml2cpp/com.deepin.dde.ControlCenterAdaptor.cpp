/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.dde.ControlCenter.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.ControlCenterAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.ControlCenter.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.ControlCenterAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ControlCenterAdaptor
 */

ControlCenterAdaptor::ControlCenterAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ControlCenterAdaptor::~ControlCenterAdaptor()
{
    // destructor
}

ControlCenterRect ControlCenterAdaptor::rect() const
{
    // get the value of property Rect
    return qvariant_cast< ControlCenterRect >(parent()->property("Rect"));
}

bool ControlCenterAdaptor::showInRight() const
{
    // get the value of property ShowInRight
    return qvariant_cast< bool >(parent()->property("ShowInRight"));
}

void ControlCenterAdaptor::Hide()
{
    // handle method call com.deepin.dde.ControlCenter.Hide
    QMetaObject::invokeMethod(parent(), "Hide");
}

void ControlCenterAdaptor::HideImmediately()
{
    // handle method call com.deepin.dde.ControlCenter.HideImmediately
    QMetaObject::invokeMethod(parent(), "HideImmediately");
}

void ControlCenterAdaptor::SetAutoHide(bool autoHide)
{
    // handle method call com.deepin.dde.ControlCenter.SetAutoHide
    QMetaObject::invokeMethod(parent(), "SetAutoHide", Q_ARG(bool, autoHide));
}

void ControlCenterAdaptor::Show()
{
    // handle method call com.deepin.dde.ControlCenter.Show
    QMetaObject::invokeMethod(parent(), "Show");
}

void ControlCenterAdaptor::ShowHome()
{
    // handle method call com.deepin.dde.ControlCenter.ShowHome
    QMetaObject::invokeMethod(parent(), "ShowHome");
}

void ControlCenterAdaptor::ShowImmediately()
{
    // handle method call com.deepin.dde.ControlCenter.ShowImmediately
    QMetaObject::invokeMethod(parent(), "ShowImmediately");
}

void ControlCenterAdaptor::ShowModule(const QString &module)
{
    // handle method call com.deepin.dde.ControlCenter.ShowModule
    QMetaObject::invokeMethod(parent(), "ShowModule", Q_ARG(QString, module));
}

void ControlCenterAdaptor::ShowPage(const QString &module, const QString &page)
{
    // handle method call com.deepin.dde.ControlCenter.ShowPage
    QMetaObject::invokeMethod(parent(), "ShowPage", Q_ARG(QString, module), Q_ARG(QString, page));
}

void ControlCenterAdaptor::Toggle()
{
    // handle method call com.deepin.dde.ControlCenter.Toggle
    QMetaObject::invokeMethod(parent(), "Toggle");
}

void ControlCenterAdaptor::ToggleInLeft()
{
    // handle method call com.deepin.dde.ControlCenter.ToggleInLeft
    QMetaObject::invokeMethod(parent(), "ToggleInLeft");
}

bool ControlCenterAdaptor::isModuleAvailable(const QString &m)
{
    // handle method call com.deepin.dde.ControlCenter.isModuleAvailable
    bool out0;
    QMetaObject::invokeMethod(parent(), "isModuleAvailable", Q_RETURN_ARG(bool, out0), Q_ARG(QString, m));
    return out0;
}

bool ControlCenterAdaptor::isNetworkCanShowPassword()
{
    // handle method call com.deepin.dde.ControlCenter.isNetworkCanShowPassword
    bool out0;
    QMetaObject::invokeMethod(parent(), "isNetworkCanShowPassword", Q_RETURN_ARG(bool, out0));
    return out0;
}

