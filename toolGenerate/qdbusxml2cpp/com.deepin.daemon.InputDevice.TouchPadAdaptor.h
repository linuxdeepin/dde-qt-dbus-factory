/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.InputDevice.TouchPad.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.InputDevice.TouchPadAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.InputDevice.TouchPad.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_INPUTDEVICE_TOUCHPADADAPTOR_H
#define COM_DEEPIN_DAEMON_INPUTDEVICE_TOUCHPADADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.InputDevice.TouchPad.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.InputDevice.TouchPad
 */
class TouchPadAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.InputDevice.TouchPad")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.InputDevice.TouchPad\">\n"
"    <method name=\"Reset\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"TPadEnable\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"LeftHanded\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"DisableIfTyping\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"NaturalScroll\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"EdgeScroll\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"HorizScroll\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"VertScroll\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"TapClick\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"PalmDetect\"/>\n"
"    <property access=\"readwrite\" type=\"d\" name=\"MotionAcceleration\"/>\n"
"    <property access=\"readwrite\" type=\"d\" name=\"MotionThreshold\"/>\n"
"    <property access=\"readwrite\" type=\"d\" name=\"MotionScaling\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"DoubleClick\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"DragThreshold\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"DeltaScroll\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"PalmMinWidth\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"PalmMinZ\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Exist\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"DeviceList\"/>\n"
"  </interface>\n"
        "")
public:
    TouchPadAdaptor(QObject *parent);
    virtual ~TouchPadAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int DeltaScroll READ deltaScroll WRITE setDeltaScroll)
    int deltaScroll() const;
    void setDeltaScroll(int value);

    Q_PROPERTY(QString DeviceList READ deviceList)
    QString deviceList() const;

    Q_PROPERTY(bool DisableIfTyping READ disableIfTyping WRITE setDisableIfTyping)
    bool disableIfTyping() const;
    void setDisableIfTyping(bool value);

    Q_PROPERTY(int DoubleClick READ doubleClick WRITE setDoubleClick)
    int doubleClick() const;
    void setDoubleClick(int value);

    Q_PROPERTY(int DragThreshold READ dragThreshold WRITE setDragThreshold)
    int dragThreshold() const;
    void setDragThreshold(int value);

    Q_PROPERTY(bool EdgeScroll READ edgeScroll WRITE setEdgeScroll)
    bool edgeScroll() const;
    void setEdgeScroll(bool value);

    Q_PROPERTY(bool Exist READ exist)
    bool exist() const;

    Q_PROPERTY(bool HorizScroll READ horizScroll WRITE setHorizScroll)
    bool horizScroll() const;
    void setHorizScroll(bool value);

    Q_PROPERTY(bool LeftHanded READ leftHanded WRITE setLeftHanded)
    bool leftHanded() const;
    void setLeftHanded(bool value);

    Q_PROPERTY(double MotionAcceleration READ motionAcceleration WRITE setMotionAcceleration)
    double motionAcceleration() const;
    void setMotionAcceleration(double value);

    Q_PROPERTY(double MotionScaling READ motionScaling WRITE setMotionScaling)
    double motionScaling() const;
    void setMotionScaling(double value);

    Q_PROPERTY(double MotionThreshold READ motionThreshold WRITE setMotionThreshold)
    double motionThreshold() const;
    void setMotionThreshold(double value);

    Q_PROPERTY(bool NaturalScroll READ naturalScroll WRITE setNaturalScroll)
    bool naturalScroll() const;
    void setNaturalScroll(bool value);

    Q_PROPERTY(bool PalmDetect READ palmDetect WRITE setPalmDetect)
    bool palmDetect() const;
    void setPalmDetect(bool value);

    Q_PROPERTY(int PalmMinWidth READ palmMinWidth WRITE setPalmMinWidth)
    int palmMinWidth() const;
    void setPalmMinWidth(int value);

    Q_PROPERTY(int PalmMinZ READ palmMinZ WRITE setPalmMinZ)
    int palmMinZ() const;
    void setPalmMinZ(int value);

    Q_PROPERTY(bool TPadEnable READ tPadEnable WRITE setTPadEnable)
    bool tPadEnable() const;
    void setTPadEnable(bool value);

    Q_PROPERTY(bool TapClick READ tapClick WRITE setTapClick)
    bool tapClick() const;
    void setTapClick(bool value);

    Q_PROPERTY(bool VertScroll READ vertScroll WRITE setVertScroll)
    bool vertScroll() const;
    void setVertScroll(bool value);

public Q_SLOTS: // METHODS
    void Reset();
Q_SIGNALS: // SIGNALS
};

#endif
