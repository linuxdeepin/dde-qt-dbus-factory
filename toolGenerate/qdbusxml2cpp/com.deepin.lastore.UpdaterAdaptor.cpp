/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.lastore.Updater.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.UpdaterAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.Updater.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.UpdaterAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class UpdaterAdaptor
 */

UpdaterAdaptor::UpdaterAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

UpdaterAdaptor::~UpdaterAdaptor()
{
    // destructor
}

bool UpdaterAdaptor::autoCheckUpdates() const
{
    // get the value of property AutoCheckUpdates
    return qvariant_cast< bool >(parent()->property("AutoCheckUpdates"));
}

bool UpdaterAdaptor::autoDownloadUpdates() const
{
    // get the value of property AutoDownloadUpdates
    return qvariant_cast< bool >(parent()->property("AutoDownloadUpdates"));
}

qulonglong UpdaterAdaptor::autoInstallUpdateType() const
{
    // get the value of property AutoInstallUpdateType
    return qvariant_cast< qulonglong >(parent()->property("AutoInstallUpdateType"));
}

bool UpdaterAdaptor::autoInstallUpdates() const
{
    // get the value of property AutoInstallUpdates
    return qvariant_cast< bool >(parent()->property("AutoInstallUpdates"));
}

void UpdaterAdaptor::setAutoInstallUpdates(bool value)
{
    // set the value of property AutoInstallUpdates
    parent()->setProperty("AutoInstallUpdates", QVariant::fromValue(value));
}

LastoreUpdatePackagesInfo UpdaterAdaptor::classifiedUpdatablePackages() const
{
    // get the value of property ClassifiedUpdatablePackages
    return qvariant_cast< LastoreUpdatePackagesInfo >(parent()->property("ClassifiedUpdatablePackages"));
}

QString UpdaterAdaptor::mirrorSource() const
{
    // get the value of property MirrorSource
    return qvariant_cast< QString >(parent()->property("MirrorSource"));
}

QStringList UpdaterAdaptor::updatableApps() const
{
    // get the value of property UpdatableApps
    return qvariant_cast< QStringList >(parent()->property("UpdatableApps"));
}

QStringList UpdaterAdaptor::updatablePackages() const
{
    // get the value of property UpdatablePackages
    return qvariant_cast< QStringList >(parent()->property("UpdatablePackages"));
}

bool UpdaterAdaptor::updateNotify() const
{
    // get the value of property UpdateNotify
    return qvariant_cast< bool >(parent()->property("UpdateNotify"));
}

AppUpdateInfoList UpdaterAdaptor::ApplicationUpdateInfos(const QString &in0)
{
    // handle method call com.deepin.lastore.Updater.ApplicationUpdateInfos
    AppUpdateInfoList out0;
    QMetaObject::invokeMethod(parent(), "ApplicationUpdateInfos", Q_RETURN_ARG(AppUpdateInfoList, out0), Q_ARG(QString, in0));
    return out0;
}

double UpdaterAdaptor::GetCheckIntervalAndTime(QString &out1)
{
    // handle method call com.deepin.lastore.Updater.GetCheckIntervalAndTime
    //return static_cast<YourObjectType *>(parent())->GetCheckIntervalAndTime(out1);
}

MirrorInfoList UpdaterAdaptor::ListMirrorSources(const QString &in0)
{
    // handle method call com.deepin.lastore.Updater.ListMirrorSources
    MirrorInfoList out0;
    QMetaObject::invokeMethod(parent(), "ListMirrorSources", Q_RETURN_ARG(MirrorInfoList, out0), Q_ARG(QString, in0));
    return out0;
}

void UpdaterAdaptor::SetAutoCheckUpdates(bool in0)
{
    // handle method call com.deepin.lastore.Updater.SetAutoCheckUpdates
    QMetaObject::invokeMethod(parent(), "SetAutoCheckUpdates", Q_ARG(bool, in0));
}

void UpdaterAdaptor::SetAutoDownloadUpdates(bool in0)
{
    // handle method call com.deepin.lastore.Updater.SetAutoDownloadUpdates
    QMetaObject::invokeMethod(parent(), "SetAutoDownloadUpdates", Q_ARG(bool, in0));
}

void UpdaterAdaptor::SetMirrorSource(const QString &in0)
{
    // handle method call com.deepin.lastore.Updater.SetMirrorSource
    QMetaObject::invokeMethod(parent(), "SetMirrorSource", Q_ARG(QString, in0));
}

void UpdaterAdaptor::SetUpdateNotify(bool in0)
{
    // handle method call com.deepin.lastore.Updater.SetUpdateNotify
    QMetaObject::invokeMethod(parent(), "SetUpdateNotify", Q_ARG(bool, in0));
}

