/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.daemonservice.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonserviceAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonservice.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEFENDER_DAEMONSERVICEADAPTOR_H
#define COM_DEEPIN_DEFENDER_DAEMONSERVICEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonservice.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.defender.daemonservice
 */
class DaemonserviceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.defender.daemonservice")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.defender.daemonservice\">\n"
"    <property access=\"readwrite\" type=\"i\" name=\"Safetygrade\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"MaturityDay\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"ScanningUsbPaths\">\n"
"      <annotation value=\"QStringList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </property>\n"
"    <method name=\"StartApp\"/>\n"
"    <method name=\"ExitApp\"/>\n"
"    <method name=\"ExitAllService\"/>\n"
"    <method name=\"ExitAnalysisService\"/>\n"
"    <method name=\"ExitAutoStartService\"/>\n"
"    <method name=\"ExitNetControlService\"/>\n"
"    <method name=\"ExitTrafficDetailService\"/>\n"
"    <method name=\"ExitMonitorNetFloService\"/>\n"
"    <method name=\"notifySendPassword\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"password\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"GetPwdLen\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"GetPwdTypeLen\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"GetPwdError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"error\"/>\n"
"    </method>\n"
"    <method name=\"SetGesttingMaturityDay\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"SetGsetting\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"PasswordUpdate\"/>\n"
"    <method name=\"JumpScreenSecurity\"/>\n"
"    <method name=\"JumpUpdatePolicy\"/>\n"
"    <method name=\"GetSystemUpdate\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"RequestStopUsbScannig\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"    <signal name=\"UsbScanningStopped\">\n"
"      <arg type=\"s\" name=\"path\"/>\n"
"    </signal>\n"
"    <signal name=\"ScanningUsbPathsChanged\">\n"
"      <arg type=\"as\" name=\"paths\"/>\n"
"      <annotation value=\"QStringList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </signal>\n"
"    <signal name=\"UpdateUI\"/>\n"
"    <signal name=\"NotifyHeartbeat\"/>\n"
"    <signal name=\"GotoScreenSecurity\"/>\n"
"    <signal name=\"GotoUpdatePolicy\"/>\n"
"  </interface>\n"
        "")
public:
    DaemonserviceAdaptor(QObject *parent);
    virtual ~DaemonserviceAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int MaturityDay READ maturityDay WRITE setMaturityDay)
    int maturityDay() const;
    void setMaturityDay(int value);

    Q_PROPERTY(int Safetygrade READ safetygrade WRITE setSafetygrade)
    int safetygrade() const;
    void setSafetygrade(int value);

    Q_PROPERTY(QStringList ScanningUsbPaths READ scanningUsbPaths)
    QStringList scanningUsbPaths() const;

public Q_SLOTS: // METHODS
    void ExitAllService();
    void ExitAnalysisService();
    void ExitApp();
    void ExitAutoStartService();
    void ExitMonitorNetFloService();
    void ExitNetControlService();
    void ExitTrafficDetailService();
    QString GetPwdError();
    int GetPwdLen();
    int GetPwdTypeLen();
    int GetSystemUpdate();
    void JumpScreenSecurity();
    void JumpUpdatePolicy();
    void PasswordUpdate();
    void RequestStopUsbScannig(const QString &path);
    void SetGesttingMaturityDay(int value);
    void SetGsetting(int value);
    void StartApp();
    QString notifySendPassword(const QString &password);
Q_SIGNALS: // SIGNALS
    void GotoScreenSecurity();
    void GotoUpdatePolicy();
    void NotifyHeartbeat();
    void ScanningUsbPathsChanged(const QStringList &paths);
    void UpdateUI();
    void UsbScanningStopped(const QString &path);
};

#endif
