/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Mime.Media.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Mime.MediaAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Mime.Media.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Mime.MediaAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MediaAdaptor
 */

MediaAdaptor::MediaAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MediaAdaptor::~MediaAdaptor()
{
    // destructor
}

bool MediaAdaptor::autoOpen() const
{
    // get the value of property AutoOpen
    return qvariant_cast< bool >(parent()->property("AutoOpen"));
}

void MediaAdaptor::EnableAutoOpen(bool in0)
{
    // handle method call com.deepin.daemon.Mime.Media.EnableAutoOpen
    QMetaObject::invokeMethod(parent(), "EnableAutoOpen", Q_ARG(bool, in0));
}

QString MediaAdaptor::GetDefaultApp(const QString &in0)
{
    // handle method call com.deepin.daemon.Mime.Media.GetDefaultApp
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetDefaultApp", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

QString MediaAdaptor::ListApps(const QString &in0)
{
    // handle method call com.deepin.daemon.Mime.Media.ListApps
    QString out0;
    QMetaObject::invokeMethod(parent(), "ListApps", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

void MediaAdaptor::Reset()
{
    // handle method call com.deepin.daemon.Mime.Media.Reset
    QMetaObject::invokeMethod(parent(), "Reset");
}

void MediaAdaptor::SetDefaultApp(const QString &in0, const QString &in1)
{
    // handle method call com.deepin.daemon.Mime.Media.SetDefaultApp
    QMetaObject::invokeMethod(parent(), "SetDefaultApp", Q_ARG(QString, in0), Q_ARG(QString, in1));
}

