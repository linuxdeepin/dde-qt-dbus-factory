/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.api.SoundThemePlayer.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.api.SoundThemePlayerAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.api.SoundThemePlayer.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.api.SoundThemePlayerAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SoundThemePlayerAdaptor
 */

SoundThemePlayerAdaptor::SoundThemePlayerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SoundThemePlayerAdaptor::~SoundThemePlayerAdaptor()
{
    // destructor
}

void SoundThemePlayerAdaptor::EnableSound(const QString &name, bool enabled)
{
    // handle method call com.deepin.api.SoundThemePlayer.EnableSound
    QMetaObject::invokeMethod(parent(), "EnableSound", Q_ARG(QString, name), Q_ARG(bool, enabled));
}

void SoundThemePlayerAdaptor::EnableSoundDesktopLogin(bool enabled)
{
    // handle method call com.deepin.api.SoundThemePlayer.EnableSoundDesktopLogin
    QMetaObject::invokeMethod(parent(), "EnableSoundDesktopLogin", Q_ARG(bool, enabled));
}

void SoundThemePlayerAdaptor::Play(const QString &theme, const QString &event, const QString &device)
{
    // handle method call com.deepin.api.SoundThemePlayer.Play
    QMetaObject::invokeMethod(parent(), "Play", Q_ARG(QString, theme), Q_ARG(QString, event), Q_ARG(QString, device));
}

void SoundThemePlayerAdaptor::PlaySoundDesktopLogin()
{
    // handle method call com.deepin.api.SoundThemePlayer.PlaySoundDesktopLogin
    QMetaObject::invokeMethod(parent(), "PlaySoundDesktopLogin");
}

void SoundThemePlayerAdaptor::PrepareShutdownSound(int uid)
{
    // handle method call com.deepin.api.SoundThemePlayer.PrepareShutdownSound
    QMetaObject::invokeMethod(parent(), "PrepareShutdownSound", Q_ARG(int, uid));
}

void SoundThemePlayerAdaptor::SaveAudioState(const QVariantMap &avtivePlayback)
{
    // handle method call com.deepin.api.SoundThemePlayer.SaveAudioState
    QMetaObject::invokeMethod(parent(), "SaveAudioState", Q_ARG(QVariantMap, avtivePlayback));
}

void SoundThemePlayerAdaptor::SetSoundTheme(const QString &theme)
{
    // handle method call com.deepin.api.SoundThemePlayer.SetSoundTheme
    QMetaObject::invokeMethod(parent(), "SetSoundTheme", Q_ARG(QString, theme));
}

