/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.netcontrol.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.netcontrolAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.netcontrol.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEFENDER_NETCONTROLADAPTOR_H
#define COM_DEEPIN_DEFENDER_NETCONTROLADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.netcontrol.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.defender.netcontrol
 */
class NetcontrolAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.defender.netcontrol")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.defender.netcontrol\">\n"
"    <property access=\"read\" type=\"d\" name=\"globalRecv\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"quitDefender\"/>\n"
"    <signal name=\"NotifyDetailData\">\n"
"      <arg type=\"s\" name=\"name\"/>\n"
"      <arg type=\"d\" name=\"recv\"/>\n"
"      <arg type=\"d\" name=\"send\"/>\n"
"      <arg type=\"i\" name=\"pid\"/>\n"
"      <arg type=\"s\" name=\"device\"/>\n"
"      <arg type=\"s\" name=\"type\"/>\n"
"    </signal>\n"
"    <signal name=\"NotifyGlobalData\">\n"
"      <arg type=\"d\" name=\"recv\"/>\n"
"      <arg type=\"d\" name=\"send\"/>\n"
"    </signal>\n"
"    <method name=\"test\"/>\n"
"    <method name=\"StartApp\"/>\n"
"    <method name=\"ExitApp\"/>\n"
"    <method name=\"preInitialize\"/>\n"
"    <method name=\"showFuncConnectNetControlInter\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appNamePath\"/>\n"
"    </method>\n"
"    <method name=\"setConnCunrrentIndex\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"    </method>\n"
"    <method name=\"getConnCunrrentIndex\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"setColor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"sColor\"/>\n"
"    </method>\n"
"    <method name=\"showRemConnectRemControlInter\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appNamePath\"/>\n"
"    </method>\n"
"    <method name=\"setRemCunrrentIndex\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"    </method>\n"
"    <method name=\"getRemCunrrentIndex\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <signal name=\"NotifyHeartbeat\"/>\n"
"    <signal name=\"netChangeAsk\"/>\n"
"    <signal name=\"remChangeAsk\"/>\n"
"  </interface>\n"
        "")
public:
    NetcontrolAdaptor(QObject *parent);
    virtual ~NetcontrolAdaptor();

public: // PROPERTIES
    Q_PROPERTY(double globalRecv READ globalRecv)
    double globalRecv() const;

    Q_PROPERTY(bool quitDefender READ quitDefender WRITE setQuitDefender)
    bool quitDefender() const;
    void setQuitDefender(bool value);

public Q_SLOTS: // METHODS
    void ExitApp();
    void StartApp();
    int getConnCunrrentIndex();
    int getRemCunrrentIndex();
    void preInitialize();
    void setColor(const QString &sColor);
    void setConnCunrrentIndex(int index);
    void setRemCunrrentIndex(int index);
    void showFuncConnectNetControlInter(const QString &appNamePath);
    void showRemConnectRemControlInter(const QString &appNamePath);
    void test();
Q_SIGNALS: // SIGNALS
    void NotifyDetailData(const QString &name, double recv, double send, int pid, const QString &device, const QString &type);
    void NotifyGlobalData(double recv, double send);
    void NotifyHeartbeat();
    void netChangeAsk();
    void remChangeAsk();
};

#endif
