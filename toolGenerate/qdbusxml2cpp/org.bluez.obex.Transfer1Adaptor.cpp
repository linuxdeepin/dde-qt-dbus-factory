/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/org.bluez.obex.Transfer1.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1Adaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class Transfer1Adaptor
 */

Transfer1Adaptor::Transfer1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

Transfer1Adaptor::~Transfer1Adaptor()
{
    // destructor
}

QString Transfer1Adaptor::filename() const
{
    // get the value of property Filename
    return qvariant_cast< QString >(parent()->property("Filename"));
}

QString Transfer1Adaptor::name() const
{
    // get the value of property Name
    return qvariant_cast< QString >(parent()->property("Name"));
}

QDBusObjectPath Transfer1Adaptor::session() const
{
    // get the value of property Session
    return qvariant_cast< QDBusObjectPath >(parent()->property("Session"));
}

qulonglong Transfer1Adaptor::size() const
{
    // get the value of property Size
    return qvariant_cast< qulonglong >(parent()->property("Size"));
}

QString Transfer1Adaptor::status() const
{
    // get the value of property Status
    return qvariant_cast< QString >(parent()->property("Status"));
}

qulonglong Transfer1Adaptor::time() const
{
    // get the value of property Time
    return qvariant_cast< qulonglong >(parent()->property("Time"));
}

qulonglong Transfer1Adaptor::transferred() const
{
    // get the value of property Transferred
    return qvariant_cast< qulonglong >(parent()->property("Transferred"));
}

QString Transfer1Adaptor::type() const
{
    // get the value of property Type
    return qvariant_cast< QString >(parent()->property("Type"));
}

void Transfer1Adaptor::Cancel()
{
    // handle method call org.bluez.obex.Transfer1.Cancel
    QMetaObject::invokeMethod(parent(), "Cancel");
}

