/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/org.freedesktop.PolicyKit1.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.PolicyKit1Adaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.PolicyKit1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_FREEDESKTOP_POLICYKIT1ADAPTOR_H
#define ORG_FREEDESKTOP_POLICYKIT1ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.PolicyKit1.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.freedesktop.PolicyKit1.Authority
 */
class AuthorityAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.PolicyKit1.Authority")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.freedesktop.PolicyKit1.Authority\">\n"
"    <method name=\"CheckAuthorization\">\n"
"      <arg direction=\"in\" type=\"(sa{sv})\" name=\"subject\"/>\n"
"      <annotation value=\"PolicySubject\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"action_id\"/>\n"
"      <arg direction=\"in\" type=\"a{ss}\" name=\"details\"/>\n"
"      <annotation value=\"PolicyDetails\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"flags\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"cancellation_id\"/>\n"
"      <arg direction=\"out\" type=\"(bba{ss})\" name=\"result\"/>\n"
"      <annotation value=\"PolicyResult\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"CancelCheckAuthorization\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"cancellation_id\"/>\n"
"    </method>\n"
"    <method name=\"RevokeTemporaryAuthorizationById\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <signal name=\"Changed\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"BackendName\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"BackendVersion\"/>\n"
"    <property access=\"read\" type=\"u\" name=\"BackendFeatures\"/>\n"
"  </interface>\n"
        "")
public:
    AuthorityAdaptor(QObject *parent);
    virtual ~AuthorityAdaptor();

public: // PROPERTIES
    Q_PROPERTY(uint BackendFeatures READ backendFeatures)
    uint backendFeatures() const;

    Q_PROPERTY(QString BackendName READ backendName)
    QString backendName() const;

    Q_PROPERTY(QString BackendVersion READ backendVersion)
    QString backendVersion() const;

public Q_SLOTS: // METHODS
    void CancelCheckAuthorization(const QString &cancellation_id);
    PolicyResult CheckAuthorization(PolicySubject subject, const QString &action_id, PolicyDetails details, uint flags, const QString &cancellation_id);
    void RevokeTemporaryAuthorizationById(const QString &id);
Q_SIGNALS: // SIGNALS
    void Changed();
};

#endif
