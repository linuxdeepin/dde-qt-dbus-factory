/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.deepinid.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinidAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinid.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinidAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DeepinidAdaptor
 */

DeepinidAdaptor::DeepinidAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DeepinidAdaptor::~DeepinidAdaptor()
{
    // destructor
}

bool DeepinidAdaptor::deviceUnlocked() const
{
    // get the value of property DeviceUnlocked
    return qvariant_cast< bool >(parent()->property("DeviceUnlocked"));
}

QString DeepinidAdaptor::hardwareID() const
{
    // get the value of property HardwareID
    return qvariant_cast< QString >(parent()->property("HardwareID"));
}

bool DeepinidAdaptor::isLogin() const
{
    // get the value of property IsLogin
    return qvariant_cast< bool >(parent()->property("IsLogin"));
}

QString DeepinidAdaptor::machineName() const
{
    // get the value of property MachineName
    return qvariant_cast< QString >(parent()->property("MachineName"));
}

QVariantMap DeepinidAdaptor::userInfo() const
{
    // get the value of property UserInfo
    return qvariant_cast< QVariantMap >(parent()->property("UserInfo"));
}

HardwareInfo DeepinidAdaptor::GetHardware()
{
    // handle method call com.deepin.deepinid.GetHardware
    HardwareInfo out0;
    QMetaObject::invokeMethod(parent(), "GetHardware", Q_RETURN_ARG(HardwareInfo, out0));
    return out0;
}

QString DeepinidAdaptor::GetToken()
{
    // handle method call com.deepin.deepinid.GetToken
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetToken", Q_RETURN_ARG(QString, out0));
    return out0;
}

void DeepinidAdaptor::Login()
{
    // handle method call com.deepin.deepinid.Login
    QMetaObject::invokeMethod(parent(), "Login");
}

void DeepinidAdaptor::Logout()
{
    // handle method call com.deepin.deepinid.Logout
    QMetaObject::invokeMethod(parent(), "Logout");
}

void DeepinidAdaptor::RevokeAccess(const QString &in0)
{
    // handle method call com.deepin.deepinid.RevokeAccess
    QMetaObject::invokeMethod(parent(), "RevokeAccess", Q_ARG(QString, in0));
}

void DeepinidAdaptor::SetToken(const QVariantMap &in0)
{
    // handle method call com.deepin.deepinid.SetToken
    QMetaObject::invokeMethod(parent(), "SetToken", Q_ARG(QVariantMap, in0));
}

void DeepinidAdaptor::UnlockDevice()
{
    // handle method call com.deepin.deepinid.UnlockDevice
    QMetaObject::invokeMethod(parent(), "UnlockDevice");
}

