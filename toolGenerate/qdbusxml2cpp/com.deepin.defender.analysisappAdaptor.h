/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.analysisapp.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.analysisappAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.analysisapp.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEFENDER_ANALYSISAPPADAPTOR_H
#define COM_DEEPIN_DEFENDER_ANALYSISAPPADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.analysisapp.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.defender.analysisapp
 */
class AnalysisappAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.defender.analysisapp")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.defender.analysisapp\">\n"
"    <method name=\"StartApp\"/>\n"
"    <method name=\"ExitApp\"/>\n"
"    <method name=\"getProcessEnvironmentVariable\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"pid\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"environmentname\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <property access=\"read\" type=\"(iss)\" name=\"processInfo\">\n"
"      <annotation value=\"DefenderProcessInfo\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"    <signal name=\"processInfo\">\n"
"      <arg direction=\"out\" type=\"(iss)\"/>\n"
"      <annotation value=\"DefenderProcessInfo\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"processInfoList\">\n"
"      <arg direction=\"out\" type=\"(a(iss))\"/>\n"
"      <annotation value=\"DefenderProcessInfoList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"a(i)\" name=\"allProcPidList\">\n"
"      <annotation value=\"DefenderProcessList\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"    <signal name=\"allProcPidList\">\n"
"      <arg direction=\"out\" type=\"a{i}\"/>\n"
"      <annotation value=\"DefenderProcessList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"guiProcDesktopList\">\n"
"      <arg direction=\"out\" type=\"(as)\"/>\n"
"      <annotation value=\"QStringList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"singleProcDesktopList\">\n"
"      <arg direction=\"out\" type=\"(as)\"/>\n"
"      <annotation value=\"QStringList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"NotifyHeartbeat\"/>\n"
"    <signal name=\"notifyUpdateLauncherList\"/>\n"
"  </interface>\n"
        "")
public:
    AnalysisappAdaptor(QObject *parent);
    virtual ~AnalysisappAdaptor();

public: // PROPERTIES
    Q_PROPERTY(DefenderProcessList allProcPidList READ allProcPidList)
    DefenderProcessList allProcPidList() const;

    Q_PROPERTY(DefenderProcessInfo processInfo READ processInfo)
    DefenderProcessInfo processInfo() const;

public Q_SLOTS: // METHODS
    void ExitApp();
    void StartApp();
    QString getProcessEnvironmentVariable(int pid, const QString &environmentname);
Q_SIGNALS: // SIGNALS
    void NotifyHeartbeat();
    void allProcPidList(DefenderProcessList in0);
    void guiProcDesktopList(const QStringList &in0);
    void notifyUpdateLauncherList();
    void processInfo(DefenderProcessInfo in0);
    void processInfoList(DefenderProcessInfoList in0);
    void singleProcDesktopList(const QStringList &in0);
};

#endif
