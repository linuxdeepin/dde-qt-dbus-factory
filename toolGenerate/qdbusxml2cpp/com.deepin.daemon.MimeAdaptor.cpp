/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Mime.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.MimeAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Mime.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.MimeAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MimeAdaptor
 */

MimeAdaptor::MimeAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MimeAdaptor::~MimeAdaptor()
{
    // destructor
}

void MimeAdaptor::AddUserApp(const QStringList &mimeTypes, const QString &desktopId)
{
    // handle method call com.deepin.daemon.Mime.AddUserApp
    QMetaObject::invokeMethod(parent(), "AddUserApp", Q_ARG(QStringList, mimeTypes), Q_ARG(QString, desktopId));
}

void MimeAdaptor::DeleteApp(const QStringList &mimeTypes, const QString &desktopId)
{
    // handle method call com.deepin.daemon.Mime.DeleteApp
    QMetaObject::invokeMethod(parent(), "DeleteApp", Q_ARG(QStringList, mimeTypes), Q_ARG(QString, desktopId));
}

void MimeAdaptor::DeleteUserApp(const QString &desktopId)
{
    // handle method call com.deepin.daemon.Mime.DeleteUserApp
    QMetaObject::invokeMethod(parent(), "DeleteUserApp", Q_ARG(QString, desktopId));
}

QString MimeAdaptor::GetDefaultApp(const QString &mimeType)
{
    // handle method call com.deepin.daemon.Mime.GetDefaultApp
    QString defaultApp;
    QMetaObject::invokeMethod(parent(), "GetDefaultApp", Q_RETURN_ARG(QString, defaultApp), Q_ARG(QString, mimeType));
    return defaultApp;
}

QString MimeAdaptor::ListApps(const QString &mimeType)
{
    // handle method call com.deepin.daemon.Mime.ListApps
    QString apps;
    QMetaObject::invokeMethod(parent(), "ListApps", Q_RETURN_ARG(QString, apps), Q_ARG(QString, mimeType));
    return apps;
}

QString MimeAdaptor::ListUserApps(const QString &mimeType)
{
    // handle method call com.deepin.daemon.Mime.ListUserApps
    QString userApps;
    QMetaObject::invokeMethod(parent(), "ListUserApps", Q_RETURN_ARG(QString, userApps), Q_ARG(QString, mimeType));
    return userApps;
}

void MimeAdaptor::SetDefaultApp(const QStringList &mimeTypes, const QString &desktopId)
{
    // handle method call com.deepin.daemon.Mime.SetDefaultApp
    QMetaObject::invokeMethod(parent(), "SetDefaultApp", Q_ARG(QStringList, mimeTypes), Q_ARG(QString, desktopId));
}

