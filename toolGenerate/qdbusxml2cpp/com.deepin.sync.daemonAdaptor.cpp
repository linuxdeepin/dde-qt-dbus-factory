/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.sync.daemon.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.sync.daemonAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.sync.daemon.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.sync.daemonAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DaemonAdaptor
 */

DaemonAdaptor::DaemonAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DaemonAdaptor::~DaemonAdaptor()
{
    // destructor
}

qlonglong DaemonAdaptor::lastSyncTime() const
{
    // get the value of property LastSyncTime
    return qvariant_cast< qlonglong >(parent()->property("LastSyncTime"));
}

IntString DaemonAdaptor::state() const
{
    // get the value of property State
    return qvariant_cast< IntString >(parent()->property("State"));
}

QVariantMap DaemonAdaptor::userInfo() const
{
    // get the value of property UserInfo
    return qvariant_cast< QVariantMap >(parent()->property("UserInfo"));
}

bool DaemonAdaptor::IsOnline()
{
    // handle method call com.deepin.sync.Daemon.IsOnline
    bool out0;
    QMetaObject::invokeMethod(parent(), "IsOnline", Q_RETURN_ARG(bool, out0));
    return out0;
}

void DaemonAdaptor::OnMessage(const QVariantMap &in0)
{
    // handle method call com.deepin.sync.Daemon.OnMessage
    QMetaObject::invokeMethod(parent(), "OnMessage", Q_ARG(QVariantMap, in0));
}

void DaemonAdaptor::Register(const QString &in0, const QString &in1)
{
    // handle method call com.deepin.sync.Daemon.Register
    QMetaObject::invokeMethod(parent(), "Register", Q_ARG(QString, in0), Q_ARG(QString, in1));
}

QString DaemonAdaptor::SwitcherDump()
{
    // handle method call com.deepin.sync.Daemon.SwitcherDump
    QString out0;
    QMetaObject::invokeMethod(parent(), "SwitcherDump", Q_RETURN_ARG(QString, out0));
    return out0;
}

bool DaemonAdaptor::SwitcherGet(const QString &in0)
{
    // handle method call com.deepin.sync.Daemon.SwitcherGet
    bool out0;
    QMetaObject::invokeMethod(parent(), "SwitcherGet", Q_RETURN_ARG(bool, out0), Q_ARG(QString, in0));
    return out0;
}

void DaemonAdaptor::SwitcherSet(const QString &in0, bool in1)
{
    // handle method call com.deepin.sync.Daemon.SwitcherSet
    QMetaObject::invokeMethod(parent(), "SwitcherSet", Q_ARG(QString, in0), Q_ARG(bool, in1));
}

