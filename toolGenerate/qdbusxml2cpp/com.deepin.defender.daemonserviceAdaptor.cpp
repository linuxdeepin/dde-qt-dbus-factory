/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.daemonservice.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonserviceAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonservice.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.daemonserviceAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DaemonserviceAdaptor
 */

DaemonserviceAdaptor::DaemonserviceAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DaemonserviceAdaptor::~DaemonserviceAdaptor()
{
    // destructor
}

int DaemonserviceAdaptor::maturityDay() const
{
    // get the value of property MaturityDay
    return qvariant_cast< int >(parent()->property("MaturityDay"));
}

void DaemonserviceAdaptor::setMaturityDay(int value)
{
    // set the value of property MaturityDay
    parent()->setProperty("MaturityDay", QVariant::fromValue(value));
}

int DaemonserviceAdaptor::safetygrade() const
{
    // get the value of property Safetygrade
    return qvariant_cast< int >(parent()->property("Safetygrade"));
}

void DaemonserviceAdaptor::setSafetygrade(int value)
{
    // set the value of property Safetygrade
    parent()->setProperty("Safetygrade", QVariant::fromValue(value));
}

QStringList DaemonserviceAdaptor::scanningUsbPaths() const
{
    // get the value of property ScanningUsbPaths
    return qvariant_cast< QStringList >(parent()->property("ScanningUsbPaths"));
}

void DaemonserviceAdaptor::ExitAllService()
{
    // handle method call com.deepin.defender.daemonservice.ExitAllService
    QMetaObject::invokeMethod(parent(), "ExitAllService");
}

void DaemonserviceAdaptor::ExitAnalysisService()
{
    // handle method call com.deepin.defender.daemonservice.ExitAnalysisService
    QMetaObject::invokeMethod(parent(), "ExitAnalysisService");
}

void DaemonserviceAdaptor::ExitApp()
{
    // handle method call com.deepin.defender.daemonservice.ExitApp
    QMetaObject::invokeMethod(parent(), "ExitApp");
}

void DaemonserviceAdaptor::ExitAutoStartService()
{
    // handle method call com.deepin.defender.daemonservice.ExitAutoStartService
    QMetaObject::invokeMethod(parent(), "ExitAutoStartService");
}

void DaemonserviceAdaptor::ExitMonitorNetFloService()
{
    // handle method call com.deepin.defender.daemonservice.ExitMonitorNetFloService
    QMetaObject::invokeMethod(parent(), "ExitMonitorNetFloService");
}

void DaemonserviceAdaptor::ExitNetControlService()
{
    // handle method call com.deepin.defender.daemonservice.ExitNetControlService
    QMetaObject::invokeMethod(parent(), "ExitNetControlService");
}

void DaemonserviceAdaptor::ExitTrafficDetailService()
{
    // handle method call com.deepin.defender.daemonservice.ExitTrafficDetailService
    QMetaObject::invokeMethod(parent(), "ExitTrafficDetailService");
}

QString DaemonserviceAdaptor::GetPwdError()
{
    // handle method call com.deepin.defender.daemonservice.GetPwdError
    QString error;
    QMetaObject::invokeMethod(parent(), "GetPwdError", Q_RETURN_ARG(QString, error));
    return error;
}

int DaemonserviceAdaptor::GetPwdLen()
{
    // handle method call com.deepin.defender.daemonservice.GetPwdLen
    int value;
    QMetaObject::invokeMethod(parent(), "GetPwdLen", Q_RETURN_ARG(int, value));
    return value;
}

int DaemonserviceAdaptor::GetPwdTypeLen()
{
    // handle method call com.deepin.defender.daemonservice.GetPwdTypeLen
    int value;
    QMetaObject::invokeMethod(parent(), "GetPwdTypeLen", Q_RETURN_ARG(int, value));
    return value;
}

int DaemonserviceAdaptor::GetSystemUpdate()
{
    // handle method call com.deepin.defender.daemonservice.GetSystemUpdate
    int value;
    QMetaObject::invokeMethod(parent(), "GetSystemUpdate", Q_RETURN_ARG(int, value));
    return value;
}

void DaemonserviceAdaptor::JumpScreenSecurity()
{
    // handle method call com.deepin.defender.daemonservice.JumpScreenSecurity
    QMetaObject::invokeMethod(parent(), "JumpScreenSecurity");
}

void DaemonserviceAdaptor::JumpUpdatePolicy()
{
    // handle method call com.deepin.defender.daemonservice.JumpUpdatePolicy
    QMetaObject::invokeMethod(parent(), "JumpUpdatePolicy");
}

void DaemonserviceAdaptor::PasswordUpdate()
{
    // handle method call com.deepin.defender.daemonservice.PasswordUpdate
    QMetaObject::invokeMethod(parent(), "PasswordUpdate");
}

void DaemonserviceAdaptor::RequestStopUsbScannig(const QString &path)
{
    // handle method call com.deepin.defender.daemonservice.RequestStopUsbScannig
    QMetaObject::invokeMethod(parent(), "RequestStopUsbScannig", Q_ARG(QString, path));
}

void DaemonserviceAdaptor::SetGesttingMaturityDay(int value)
{
    // handle method call com.deepin.defender.daemonservice.SetGesttingMaturityDay
    QMetaObject::invokeMethod(parent(), "SetGesttingMaturityDay", Q_ARG(int, value));
}

void DaemonserviceAdaptor::SetGsetting(int value)
{
    // handle method call com.deepin.defender.daemonservice.SetGsetting
    QMetaObject::invokeMethod(parent(), "SetGsetting", Q_ARG(int, value));
}

void DaemonserviceAdaptor::StartApp()
{
    // handle method call com.deepin.defender.daemonservice.StartApp
    QMetaObject::invokeMethod(parent(), "StartApp");
}

QString DaemonserviceAdaptor::notifySendPassword(const QString &password)
{
    // handle method call com.deepin.defender.daemonservice.notifySendPassword
    QString result;
    QMetaObject::invokeMethod(parent(), "notifySendPassword", Q_RETURN_ARG(QString, result), Q_ARG(QString, password));
    return result;
}

