/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.SystemInfo.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.SystemInfoAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.SystemInfo.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.SystemInfoAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SystemInfoAdaptor
 */

SystemInfoAdaptor::SystemInfoAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SystemInfoAdaptor::~SystemInfoAdaptor()
{
    // destructor
}

qulonglong SystemInfoAdaptor::diskCap() const
{
    // get the value of property DiskCap
    return qvariant_cast< qulonglong >(parent()->property("DiskCap"));
}

QString SystemInfoAdaptor::distroDesc() const
{
    // get the value of property DistroDesc
    return qvariant_cast< QString >(parent()->property("DistroDesc"));
}

QString SystemInfoAdaptor::distroID() const
{
    // get the value of property DistroID
    return qvariant_cast< QString >(parent()->property("DistroID"));
}

QString SystemInfoAdaptor::distroVer() const
{
    // get the value of property DistroVer
    return qvariant_cast< QString >(parent()->property("DistroVer"));
}

qulonglong SystemInfoAdaptor::memoryCap() const
{
    // get the value of property MemoryCap
    return qvariant_cast< qulonglong >(parent()->property("MemoryCap"));
}

QString SystemInfoAdaptor::processor() const
{
    // get the value of property Processor
    return qvariant_cast< QString >(parent()->property("Processor"));
}

qlonglong SystemInfoAdaptor::systemType() const
{
    // get the value of property SystemType
    return qvariant_cast< qlonglong >(parent()->property("SystemType"));
}

QString SystemInfoAdaptor::version() const
{
    // get the value of property Version
    return qvariant_cast< QString >(parent()->property("Version"));
}

