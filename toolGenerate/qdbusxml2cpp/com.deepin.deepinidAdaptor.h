/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.deepinid.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinidAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinid.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEEPINIDADAPTOR_H
#define COM_DEEPIN_DEEPINIDADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.deepinid.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.deepinid
 */
class DeepinidAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.deepinid")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.deepinid\">\n"
"    <method name=\"GetToken\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"Login\"/>\n"
"    <method name=\"Logout\"/>\n"
"    <method name=\"RevokeAccess\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"UnlockDevice\"/>\n"
"    <method name=\"GetHardware\">\n"
"      <arg direction=\"out\" type=\"(sssssbxxss(ssssssssssss))))\"/>\n"
"      <annotation value=\"HardwareInfo\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"SetToken\">\n"
"      <arg direction=\"in\" type=\"a{sv}\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <signal name=\"Error\">\n"
"      <arg type=\"i\"/>\n"
"      <arg type=\"s\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"b\" name=\"IsLogin\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"HardwareID\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"DeviceUnlocked\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"MachineName\"/>\n"
"    <property access=\"read\" type=\"a{sv}\" name=\"UserInfo\">\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"  </interface>\n"
        "")
public:
    DeepinidAdaptor(QObject *parent);
    virtual ~DeepinidAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool DeviceUnlocked READ deviceUnlocked)
    bool deviceUnlocked() const;

    Q_PROPERTY(QString HardwareID READ hardwareID)
    QString hardwareID() const;

    Q_PROPERTY(bool IsLogin READ isLogin)
    bool isLogin() const;

    Q_PROPERTY(QString MachineName READ machineName)
    QString machineName() const;

    Q_PROPERTY(QVariantMap UserInfo READ userInfo)
    QVariantMap userInfo() const;

public Q_SLOTS: // METHODS
    HardwareInfo GetHardware();
    QString GetToken();
    void Login();
    void Logout();
    void RevokeAccess(const QString &in0);
    void SetToken(const QVariantMap &in0);
    void UnlockDevice();
Q_SIGNALS: // SIGNALS
    void Error(int in0, const QString &in1);
};

#endif
