/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.ResourceManager.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.ResourceManagerAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.ResourceManager.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.ResourceManagerAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ResourceManagerAdaptor
 */

ResourceManagerAdaptor::ResourceManagerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ResourceManagerAdaptor::~ResourceManagerAdaptor()
{
    // destructor
}

void ResourceManagerAdaptor::AllowRequest(const QString &uuid, const QString &msg, bool allow)
{
    // handle method call com.deepin.daemon.ResourceManager.AllowRequest
    QMetaObject::invokeMethod(parent(), "AllowRequest", Q_ARG(QString, uuid), Q_ARG(QString, msg), Q_ARG(bool, allow));
}

QString ResourceManagerAdaptor::Subscribe(int pid, const QString &cmd, const QList <int > &interest, bool force)
{
    // handle method call com.deepin.daemon.ResourceManager.Subscribe
    QString uuid;
    QMetaObject::invokeMethod(parent(), "Subscribe", Q_RETURN_ARG(QString, uuid), Q_ARG(int, pid), Q_ARG(QString, cmd), Q_ARG(QList <int >, interest), Q_ARG(bool, force));
    return uuid;
}

QString ResourceManagerAdaptor::SubscribeControl(int pid, const QString &cmd, const QString &name, const QList <int > &interest)
{
    // handle method call com.deepin.daemon.ResourceManager.SubscribeControl
    QString uuid;
    QMetaObject::invokeMethod(parent(), "SubscribeControl", Q_RETURN_ARG(QString, uuid), Q_ARG(int, pid), Q_ARG(QString, cmd), Q_ARG(QString, name), Q_ARG(QList <int >, interest));
    return uuid;
}

void ResourceManagerAdaptor::Unsubscribe(const QString &uuid)
{
    // handle method call com.deepin.daemon.ResourceManager.Unsubscribe
    QMetaObject::invokeMethod(parent(), "Unsubscribe", Q_ARG(QString, uuid));
}

