/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Network.ProxyChains.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChainsAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChains.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Network.ProxyChainsAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ProxyChainsAdaptor
 */

ProxyChainsAdaptor::ProxyChainsAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ProxyChainsAdaptor::~ProxyChainsAdaptor()
{
    // destructor
}

QString ProxyChainsAdaptor::iP() const
{
    // get the value of property IP
    return qvariant_cast< QString >(parent()->property("IP"));
}

QString ProxyChainsAdaptor::password() const
{
    // get the value of property Password
    return qvariant_cast< QString >(parent()->property("Password"));
}

uint ProxyChainsAdaptor::port() const
{
    // get the value of property Port
    return qvariant_cast< uint >(parent()->property("Port"));
}

QString ProxyChainsAdaptor::type() const
{
    // get the value of property Type
    return qvariant_cast< QString >(parent()->property("Type"));
}

QString ProxyChainsAdaptor::user() const
{
    // get the value of property User
    return qvariant_cast< QString >(parent()->property("User"));
}

void ProxyChainsAdaptor::Set(const QString &in0, const QString &in1, uint in2, const QString &in3, const QString &in4)
{
    // handle method call com.deepin.daemon.Network.ProxyChains.Set
    QMetaObject::invokeMethod(parent(), "Set", Q_ARG(QString, in0), Q_ARG(QString, in1), Q_ARG(uint, in2), Q_ARG(QString, in3), Q_ARG(QString, in4));
}

