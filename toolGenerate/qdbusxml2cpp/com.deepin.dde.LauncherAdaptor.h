/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.dde.Launcher.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.LauncherAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.Launcher.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DDE_LAUNCHERADAPTOR_H
#define COM_DEEPIN_DDE_LAUNCHERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.dde.Launcher.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.dde.Launcher
 */
class LauncherAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.dde.Launcher")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.dde.Launcher\">\n"
"    <property access=\"read\" type=\"b\" name=\"Visible\"/>\n"
"    <signal name=\"Closed\"/>\n"
"    <signal name=\"Shown\"/>\n"
"    <signal name=\"VisibleChanged\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"visible\"/>\n"
"    </signal>\n"
"    <method name=\"Exit\"/>\n"
"    <method name=\"Hide\"/>\n"
"    <method name=\"Show\"/>\n"
"    <method name=\"ShowByMode\">\n"
"      <arg direction=\"in\" type=\"x\" name=\"in0\"/>\n"
"    </method>\n"
"    <method name=\"UninstallApp\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appKey\"/>\n"
"    </method>\n"
"    <method name=\"Toggle\"/>\n"
"    <method name=\"IsVisible\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    LauncherAdaptor(QObject *parent);
    virtual ~LauncherAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool Visible READ visible)
    bool visible() const;

public Q_SLOTS: // METHODS
    void Exit();
    void Hide();
    bool IsVisible();
    void Show();
    void ShowByMode(qlonglong in0);
    void Toggle();
    void UninstallApp(const QString &appKey);
Q_SIGNALS: // SIGNALS
    void Closed();
    void Shown();
    void VisibleChanged(bool visible);
};

#endif
