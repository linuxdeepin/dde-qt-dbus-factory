/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Authenticate.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.AuthenticateAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Authenticate.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.AuthenticateAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class AuthenticateAdaptor
 */

AuthenticateAdaptor::AuthenticateAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

AuthenticateAdaptor::~AuthenticateAdaptor()
{
    // destructor
}

int AuthenticateAdaptor::frameworkState() const
{
    // get the value of property FrameworkState
    return qvariant_cast< int >(parent()->property("FrameworkState"));
}

QString AuthenticateAdaptor::supportEncrypts() const
{
    // get the value of property SupportEncrypts
    return qvariant_cast< QString >(parent()->property("SupportEncrypts"));
}

int AuthenticateAdaptor::supportedFlags() const
{
    // get the value of property SupportedFlags
    return qvariant_cast< int >(parent()->property("SupportedFlags"));
}

QString AuthenticateAdaptor::Authenticate(const QString &username, int authFlags, int appType)
{
    // handle method call com.deepin.daemon.Authenticate.Authenticate
    QString path;
    QMetaObject::invokeMethod(parent(), "Authenticate", Q_RETURN_ARG(QString, path), Q_ARG(QString, username), Q_ARG(int, authFlags), Q_ARG(int, appType));
    return path;
}

QString AuthenticateAdaptor::GetLimits(const QString &username)
{
    // handle method call com.deepin.daemon.Authenticate.GetLimits
    QString limits;
    QMetaObject::invokeMethod(parent(), "GetLimits", Q_RETURN_ARG(QString, limits), Q_ARG(QString, username));
    return limits;
}

QString AuthenticateAdaptor::PreOneKeyLogin(int flag)
{
    // handle method call com.deepin.daemon.Authenticate.PreOneKeyLogin
    QString result;
    QMetaObject::invokeMethod(parent(), "PreOneKeyLogin", Q_RETURN_ARG(QString, result), Q_ARG(int, flag));
    return result;
}

