/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Calendar.Scheduler.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Calendar.SchedulerAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Calendar.Scheduler.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Calendar.SchedulerAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SchedulerAdaptor
 */

SchedulerAdaptor::SchedulerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SchedulerAdaptor::~SchedulerAdaptor()
{
    // destructor
}

qlonglong SchedulerAdaptor::CreateJob(const QString &jobInfo)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.CreateJob
    qlonglong id;
    QMetaObject::invokeMethod(parent(), "CreateJob", Q_RETURN_ARG(qlonglong, id), Q_ARG(QString, jobInfo));
    return id;
}

qlonglong SchedulerAdaptor::CreateType(const QString &typeInfo)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.CreateType
    qlonglong id;
    QMetaObject::invokeMethod(parent(), "CreateType", Q_RETURN_ARG(qlonglong, id), Q_ARG(QString, typeInfo));
    return id;
}

void SchedulerAdaptor::DebugRemindJob(qlonglong id)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.DebugRemindJob
    QMetaObject::invokeMethod(parent(), "DebugRemindJob", Q_ARG(qlonglong, id));
}

void SchedulerAdaptor::DeleteJob(qlonglong id)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.DeleteJob
    QMetaObject::invokeMethod(parent(), "DeleteJob", Q_ARG(qlonglong, id));
}

void SchedulerAdaptor::DeleteType(qlonglong id)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.DeleteType
    QMetaObject::invokeMethod(parent(), "DeleteType", Q_ARG(qlonglong, id));
}

QString SchedulerAdaptor::GetJob(qlonglong id)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.GetJob
    QString job;
    QMetaObject::invokeMethod(parent(), "GetJob", Q_RETURN_ARG(QString, job), Q_ARG(qlonglong, id));
    return job;
}

QString SchedulerAdaptor::GetJobs(int startYear, int startMonth, int startDay, int endYear, int endMonth, int endDay)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.GetJobs
    QString jobs;
    QMetaObject::invokeMethod(parent(), "GetJobs", Q_RETURN_ARG(QString, jobs), Q_ARG(int, startYear), Q_ARG(int, startMonth), Q_ARG(int, startDay), Q_ARG(int, endYear), Q_ARG(int, endMonth), Q_ARG(int, endDay));
    return jobs;
}

QString SchedulerAdaptor::GetType(qlonglong id)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.GetType
    QString type;
    QMetaObject::invokeMethod(parent(), "GetType", Q_RETURN_ARG(QString, type), Q_ARG(qlonglong, id));
    return type;
}

QString SchedulerAdaptor::GetTypes()
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.GetTypes
    QString types;
    QMetaObject::invokeMethod(parent(), "GetTypes", Q_RETURN_ARG(QString, types));
    return types;
}

void SchedulerAdaptor::UpdateJob(const QString &jobInfo)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.UpdateJob
    QMetaObject::invokeMethod(parent(), "UpdateJob", Q_ARG(QString, jobInfo));
}

void SchedulerAdaptor::UpdateType(const QString &typeInfo)
{
    // handle method call com.deepin.daemon.Calendar.Scheduler.UpdateType
    QMetaObject::invokeMethod(parent(), "UpdateType", Q_ARG(QString, typeInfo));
}

