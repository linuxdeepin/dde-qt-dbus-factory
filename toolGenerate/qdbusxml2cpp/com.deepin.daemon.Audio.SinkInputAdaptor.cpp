/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Audio.SinkInput.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Audio.SinkInputAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Audio.SinkInput.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Audio.SinkInputAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SinkInputAdaptor
 */

SinkInputAdaptor::SinkInputAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SinkInputAdaptor::~SinkInputAdaptor()
{
    // destructor
}

double SinkInputAdaptor::balance() const
{
    // get the value of property Balance
    return qvariant_cast< double >(parent()->property("Balance"));
}

double SinkInputAdaptor::fade() const
{
    // get the value of property Fade
    return qvariant_cast< double >(parent()->property("Fade"));
}

QString SinkInputAdaptor::icon() const
{
    // get the value of property Icon
    return qvariant_cast< QString >(parent()->property("Icon"));
}

bool SinkInputAdaptor::mute() const
{
    // get the value of property Mute
    return qvariant_cast< bool >(parent()->property("Mute"));
}

QString SinkInputAdaptor::name() const
{
    // get the value of property Name
    return qvariant_cast< QString >(parent()->property("Name"));
}

bool SinkInputAdaptor::supportBalance() const
{
    // get the value of property SupportBalance
    return qvariant_cast< bool >(parent()->property("SupportBalance"));
}

bool SinkInputAdaptor::supportFade() const
{
    // get the value of property SupportFade
    return qvariant_cast< bool >(parent()->property("SupportFade"));
}

double SinkInputAdaptor::volume() const
{
    // get the value of property Volume
    return qvariant_cast< double >(parent()->property("Volume"));
}

void SinkInputAdaptor::SetBalance(double in0, bool in1)
{
    // handle method call com.deepin.daemon.Audio.SinkInput.SetBalance
    QMetaObject::invokeMethod(parent(), "SetBalance", Q_ARG(double, in0), Q_ARG(bool, in1));
}

void SinkInputAdaptor::SetFade(double in0)
{
    // handle method call com.deepin.daemon.Audio.SinkInput.SetFade
    QMetaObject::invokeMethod(parent(), "SetFade", Q_ARG(double, in0));
}

void SinkInputAdaptor::SetMute(bool in0)
{
    // handle method call com.deepin.daemon.Audio.SinkInput.SetMute
    QMetaObject::invokeMethod(parent(), "SetMute", Q_ARG(bool, in0));
}

void SinkInputAdaptor::SetVolume(double in0, bool in1)
{
    // handle method call com.deepin.daemon.Audio.SinkInput.SetVolume
    QMetaObject::invokeMethod(parent(), "SetVolume", Q_ARG(double, in0), Q_ARG(bool, in1));
}

