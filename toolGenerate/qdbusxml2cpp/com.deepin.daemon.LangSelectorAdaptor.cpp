/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.LangSelector.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.LangSelectorAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.LangSelector.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.LangSelectorAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LangSelectorAdaptor
 */

LangSelectorAdaptor::LangSelectorAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LangSelectorAdaptor::~LangSelectorAdaptor()
{
    // destructor
}

QString LangSelectorAdaptor::currentLocale() const
{
    // get the value of property CurrentLocale
    return qvariant_cast< QString >(parent()->property("CurrentLocale"));
}

int LangSelectorAdaptor::localeState() const
{
    // get the value of property LocaleState
    return qvariant_cast< int >(parent()->property("LocaleState"));
}

QStringList LangSelectorAdaptor::locales() const
{
    // get the value of property Locales
    return qvariant_cast< QStringList >(parent()->property("Locales"));
}

void LangSelectorAdaptor::AddLocale(const QString &in0)
{
    // handle method call com.deepin.daemon.LangSelector.AddLocale
    QMetaObject::invokeMethod(parent(), "AddLocale", Q_ARG(QString, in0));
}

void LangSelectorAdaptor::DeleteLocale(const QString &in0)
{
    // handle method call com.deepin.daemon.LangSelector.DeleteLocale
    QMetaObject::invokeMethod(parent(), "DeleteLocale", Q_ARG(QString, in0));
}

QStringList LangSelectorAdaptor::GetLanguageSupportPackages(const QString &in0)
{
    // handle method call com.deepin.daemon.LangSelector.GetLanguageSupportPackages
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetLanguageSupportPackages", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, in0));
    return out0;
}

QString LangSelectorAdaptor::GetLocaleDescription(const QString &in0)
{
    // handle method call com.deepin.daemon.LangSelector.GetLocaleDescription
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetLocaleDescription", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

LocaleList LangSelectorAdaptor::GetLocaleList()
{
    // handle method call com.deepin.daemon.LangSelector.GetLocaleList
    LocaleList out0;
    QMetaObject::invokeMethod(parent(), "GetLocaleList", Q_RETURN_ARG(LocaleList, out0));
    return out0;
}

void LangSelectorAdaptor::Reset()
{
    // handle method call com.deepin.daemon.LangSelector.Reset
    QMetaObject::invokeMethod(parent(), "Reset");
}

void LangSelectorAdaptor::SetLocale(const QString &in0)
{
    // handle method call com.deepin.daemon.LangSelector.SetLocale
    QMetaObject::invokeMethod(parent(), "SetLocale", Q_ARG(QString, in0));
}

