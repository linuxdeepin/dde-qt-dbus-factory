/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.iflytek.aiservice.session.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.sessionAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.session.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_IFLYTEK_AISERVICE_SESSIONADAPTOR_H
#define COM_IFLYTEK_AISERVICE_SESSIONADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.session.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.iflytek.aiservice.session
 */
class SessionAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.iflytek.aiservice.session")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.iflytek.aiservice.session\">\n"
"    <method name=\"createSession\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"ability\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"errorcode\"/>\n"
"    </method>\n"
"    <method name=\"freeSession\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"ability\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"errorcode\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    SessionAdaptor(QObject *parent);
    virtual ~SessionAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QDBusObjectPath createSession(const QString &appId, const QString &ability, int &errorcode);
    int freeSession(const QString &appId, const QString &ability);
Q_SIGNALS: // SIGNALS
};

#endif
