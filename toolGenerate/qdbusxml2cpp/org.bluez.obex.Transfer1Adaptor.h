/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/org.bluez.obex.Transfer1.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1Adaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_BLUEZ_OBEX_TRANSFER1ADAPTOR_H
#define ORG_BLUEZ_OBEX_TRANSFER1ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.bluez.obex.Transfer1.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.bluez.obex.Transfer1
 */
class Transfer1Adaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.bluez.obex.Transfer1")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.bluez.obex.Transfer1\">\n"
"    <method name=\"Cancel\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Status\"/>\n"
"    <property access=\"read\" type=\"o\" name=\"Session\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Name\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Type\"/>\n"
"    <property access=\"read\" type=\"t\" name=\"Size\"/>\n"
"    <property access=\"read\" type=\"t\" name=\"Time\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Filename\"/>\n"
"    <property access=\"read\" type=\"t\" name=\"Transferred\"/>\n"
"  </interface>\n"
        "")
public:
    Transfer1Adaptor(QObject *parent);
    virtual ~Transfer1Adaptor();

public: // PROPERTIES
    Q_PROPERTY(QString Filename READ filename)
    QString filename() const;

    Q_PROPERTY(QString Name READ name)
    QString name() const;

    Q_PROPERTY(QDBusObjectPath Session READ session)
    QDBusObjectPath session() const;

    Q_PROPERTY(qulonglong Size READ size)
    qulonglong size() const;

    Q_PROPERTY(QString Status READ status)
    QString status() const;

    Q_PROPERTY(qulonglong Time READ time)
    qulonglong time() const;

    Q_PROPERTY(qulonglong Transferred READ transferred)
    qulonglong transferred() const;

    Q_PROPERTY(QString Type READ type)
    QString type() const;

public Q_SLOTS: // METHODS
    void Cancel();
Q_SIGNALS: // SIGNALS
};

#endif
