/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.trafficdetails.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.trafficdetailsAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.trafficdetails.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEFENDER_TRAFFICDETAILSADAPTOR_H
#define COM_DEEPIN_DEFENDER_TRAFFICDETAILSADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.trafficdetails.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.defender.trafficdetails
 */
class TrafficdetailsAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.defender.trafficdetails")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.defender.trafficdetails\">\n"
"    <property access=\"read\" type=\"(sssssssdddib)\" name=\"Display\">\n"
"      <annotation value=\"DefenderDisplay\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"    <property access=\"read\" type=\"(isssddd)\" name=\"defenderAppFlow\">\n"
"      <annotation value=\"DefenderAppFlow\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"    <method name=\"StartApp\"/>\n"
"    <method name=\"ExitApp\"/>\n"
"    <method name=\"notifyGetYesterdayFlowData\"/>\n"
"    <method name=\"notifyGetTodayFlowData\"/>\n"
"    <method name=\"notifyGetLastMonthFlowData\"/>\n"
"    <method name=\"notifyGetThisMonthFlowData\"/>\n"
"    <method name=\"notifyGetAppYesterdayFlowData\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appname\"/>\n"
"    </method>\n"
"    <method name=\"notifyGetAppTodayFlowData\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appname\"/>\n"
"    </method>\n"
"    <method name=\"notifyGetAppLastMonthFlowData\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appname\"/>\n"
"    </method>\n"
"    <method name=\"notifyGetAppThisMonthFlowData\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appname\"/>\n"
"    </method>\n"
"    <signal name=\"NotifyHeartbeat\"/>\n"
"    <signal name=\"Display\">\n"
"      <arg direction=\"out\" type=\"(sssssssdddib)\"/>\n"
"      <annotation value=\"DefenderDisplay\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"displayflow\">\n"
"      <arg direction=\"out\" type=\"(a(sssssssdddib))\"/>\n"
"      <annotation value=\"DefenderDisplayList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"displayspped\">\n"
"      <arg direction=\"out\" type=\"(a(sssssssdddib))\"/>\n"
"      <annotation value=\"DefenderDisplayList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"    <signal name=\"updatedisplay\"/>\n"
"    <signal name=\"sendAppFlowData\">\n"
"      <arg direction=\"out\" type=\"(a(isssddd))\"/>\n"
"      <annotation value=\"DefenderAppFlowList\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    TrafficdetailsAdaptor(QObject *parent);
    virtual ~TrafficdetailsAdaptor();

public: // PROPERTIES
    Q_PROPERTY(DefenderDisplay Display READ display)
    DefenderDisplay display() const;

    Q_PROPERTY(DefenderAppFlow defenderAppFlow READ defenderAppFlow)
    DefenderAppFlow defenderAppFlow() const;

public Q_SLOTS: // METHODS
    void ExitApp();
    void StartApp();
    void notifyGetAppLastMonthFlowData(const QString &appname);
    void notifyGetAppThisMonthFlowData(const QString &appname);
    void notifyGetAppTodayFlowData(const QString &appname);
    void notifyGetAppYesterdayFlowData(const QString &appname);
    void notifyGetLastMonthFlowData();
    void notifyGetThisMonthFlowData();
    void notifyGetTodayFlowData();
    void notifyGetYesterdayFlowData();
Q_SIGNALS: // SIGNALS
    void Display(DefenderDisplay in0);
    void NotifyHeartbeat();
    void displayflow(DefenderDisplayList in0);
    void displayspped(DefenderDisplayList in0);
    void sendAppFlowData(DefenderAppFlowList in0);
    void updatedisplay();
};

#endif
