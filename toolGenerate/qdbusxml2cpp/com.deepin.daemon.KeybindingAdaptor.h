/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Keybinding.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.KeybindingAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Keybinding.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_KEYBINDINGADAPTOR_H
#define COM_DEEPIN_DAEMON_KEYBINDINGADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Keybinding.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.Keybinding
 */
class KeybindingAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.Keybinding")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.Keybinding\">\n"
"    <method name=\"Add\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"AddCustomShortcut\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"AddShortcutKeystroke\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"CheckAvaliable\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SearchShortcuts\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"ClearShortcutKeystrokes\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"Delete\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"DeleteCustomShortcut\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"DeleteShortcutKeystroke\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"Disable\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"GetShortcut\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"GrabScreen\"/>\n"
"    <method name=\"List\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"ListAllShortcuts\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"ListShortcutsByType\">\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"LookupConflictingShortcut\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"ModifiedAccel\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"ModifyCustomShortcut\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"Query\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"Reset\"/>\n"
"    <method name=\"SelectKeystroke\"/>\n"
"    <method name=\"SetNumLockState\">\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <signal name=\"Added\">\n"
"      <arg type=\"s\"/>\n"
"      <arg type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"Deleted\">\n"
"      <arg type=\"s\"/>\n"
"      <arg type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"Changed\">\n"
"      <arg type=\"s\"/>\n"
"      <arg type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"KeyEvent\">\n"
"      <arg type=\"b\"/>\n"
"      <arg type=\"s\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"i\" name=\"NumLockState\"/>\n"
"    <property access=\"readwrite\" type=\"u\" name=\"ShortcutSwitchLayout\"/>\n"
"  </interface>\n"
        "")
public:
    KeybindingAdaptor(QObject *parent);
    virtual ~KeybindingAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int NumLockState READ numLockState)
    int numLockState() const;

    Q_PROPERTY(uint ShortcutSwitchLayout READ shortcutSwitchLayout WRITE setShortcutSwitchLayout)
    uint shortcutSwitchLayout() const;
    void setShortcutSwitchLayout(uint value);

public Q_SLOTS: // METHODS
    QString Add(const QString &in0, const QString &in1, const QString &in2, bool &out1);
    void AddCustomShortcut(const QString &in0, const QString &in1, const QString &in2);
    void AddShortcutKeystroke(const QString &in0, int in1, const QString &in2);
    bool CheckAvaliable(const QString &in0, QString &out1);
    void ClearShortcutKeystrokes(const QString &in0, int in1);
    void Delete(const QString &in0, int in1);
    void DeleteCustomShortcut(const QString &in0);
    void DeleteShortcutKeystroke(const QString &in0, int in1, const QString &in2);
    void Disable(const QString &in0, int in1);
    QString GetShortcut(const QString &in0, int in1);
    void GrabScreen();
    QString List();
    QString ListAllShortcuts();
    QString ListShortcutsByType(int in0);
    QString LookupConflictingShortcut(const QString &in0);
    bool ModifiedAccel(const QString &in0, int in1, const QString &in2, bool in3, QString &out1);
    void ModifyCustomShortcut(const QString &in0, const QString &in1, const QString &in2, const QString &in3);
    QString Query(const QString &in0, int in1);
    void Reset();
    QString SearchShortcuts(const QString &in0);
    void SelectKeystroke();
    void SetNumLockState(int in0);
Q_SIGNALS: // SIGNALS
    void Added(const QString &in0, int in1);
    void Changed(const QString &in0, int in1);
    void Deleted(const QString &in0, int in1);
    void KeyEvent(bool in0, const QString &in1);
};

#endif
