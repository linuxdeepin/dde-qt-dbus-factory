/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.AirplaneMode.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.AirplaneModeAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.AirplaneMode.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_AIRPLANEMODEADAPTOR_H
#define COM_DEEPIN_DAEMON_AIRPLANEMODEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.AirplaneMode.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.AirplaneMode
 */
class AirplaneModeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.AirplaneMode")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.AirplaneMode\">\n"
"    <method name=\"DumpState\"/>\n"
"    <method name=\"Enable\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"EnableBluetooth\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"EnableWifi\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <property access=\"read\" type=\"b\" name=\"BluetoothEnabled\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Enabled\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"WifiEnabled\"/>\n"
"  </interface>\n"
        "")
public:
    AirplaneModeAdaptor(QObject *parent);
    virtual ~AirplaneModeAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool BluetoothEnabled READ bluetoothEnabled)
    bool bluetoothEnabled() const;

    Q_PROPERTY(bool Enabled READ enabled)
    bool enabled() const;

    Q_PROPERTY(bool WifiEnabled READ wifiEnabled)
    bool wifiEnabled() const;

public Q_SLOTS: // METHODS
    void DumpState();
    void Enable(bool enabled);
    void EnableBluetooth(bool enabled);
    void EnableWifi(bool enabled);
Q_SIGNALS: // SIGNALS
};

#endif
