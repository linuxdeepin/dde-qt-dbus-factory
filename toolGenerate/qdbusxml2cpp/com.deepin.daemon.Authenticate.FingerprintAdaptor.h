/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Authenticate.Fingerprint.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Authenticate.FingerprintAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Authenticate.Fingerprint.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_AUTHENTICATE_FINGERPRINTADAPTOR_H
#define COM_DEEPIN_DAEMON_AUTHENTICATE_FINGERPRINTADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Authenticate.Fingerprint.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.Authenticate.Fingerprint
 */
class FingerprintAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.Authenticate.Fingerprint")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.Authenticate.Fingerprint\">\n"
"    <method name=\"Claim\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"username\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"claimed\"/>\n"
"    </method>\n"
"    <method name=\"DeleteAllFingers\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"username\"/>\n"
"    </method>\n"
"    <method name=\"DeleteFinger\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"username\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"finger\"/>\n"
"    </method>\n"
"    <method name=\"PreAuthEnroll\"/>\n"
"    <method name=\"Enroll\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"finger\"/>\n"
"    </method>\n"
"    <method name=\"ListFingers\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"username\"/>\n"
"      <arg direction=\"out\" type=\"as\" name=\"fingers\"/>\n"
"    </method>\n"
"    <method name=\"RenameFinger\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"username\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"finger\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"newName\"/>\n"
"    </method>\n"
"    <method name=\"SetDefaultDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"    </method>\n"
"    <method name=\"StopEnroll\"/>\n"
"    <method name=\"StopVerify\"/>\n"
"    <method name=\"Verify\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"finger\"/>\n"
"    </method>\n"
"    <signal name=\"EnrollStatus\">\n"
"      <arg type=\"s\" name=\"id\"/>\n"
"      <arg type=\"i\" name=\"code\"/>\n"
"      <arg type=\"s\" name=\"msg\"/>\n"
"    </signal>\n"
"    <signal name=\"VerifyStatus\">\n"
"      <arg type=\"s\" name=\"id\"/>\n"
"      <arg type=\"i\" name=\"code\"/>\n"
"      <arg type=\"s\" name=\"msg\"/>\n"
"    </signal>\n"
"    <signal name=\"Touch\">\n"
"      <arg type=\"s\" name=\"id\"/>\n"
"      <arg type=\"b\" name=\"pressed\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"s\" name=\"DefaultDevice\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Devices\"/>\n"
"  </interface>\n"
        "")
public:
    FingerprintAdaptor(QObject *parent);
    virtual ~FingerprintAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString DefaultDevice READ defaultDevice)
    QString defaultDevice() const;

    Q_PROPERTY(QString Devices READ devices)
    QString devices() const;

public Q_SLOTS: // METHODS
    void Claim(const QString &username, bool claimed);
    void DeleteAllFingers(const QString &username);
    void DeleteFinger(const QString &username, const QString &finger);
    void Enroll(const QString &finger);
    QStringList ListFingers(const QString &username);
    void PreAuthEnroll();
    void RenameFinger(const QString &username, const QString &finger, const QString &newName);
    void SetDefaultDevice(const QString &device);
    void StopEnroll();
    void StopVerify();
    void Verify(const QString &finger);
Q_SIGNALS: // SIGNALS
    void EnrollStatus(const QString &id, int code, const QString &msg);
    void Touch(const QString &id, bool pressed);
    void VerifyStatus(const QString &id, int code, const QString &msg);
};

#endif
