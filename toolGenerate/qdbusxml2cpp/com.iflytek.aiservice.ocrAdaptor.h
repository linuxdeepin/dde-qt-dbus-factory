/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.iflytek.aiservice.ocr.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.ocrAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.ocr.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_IFLYTEK_AISERVICE_OCRADAPTOR_H
#define COM_IFLYTEK_AISERVICE_OCRADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.iflytek.aiservice.ocr.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.iflytek.aiservice.ocr
 */
class OcrAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.iflytek.aiservice.ocr")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.iflytek.aiservice.ocr\">\n"
"    <method name=\"sendpictureByPath\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isSync\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"errorcode\"/>\n"
"    </method>\n"
"    <method name=\"sendpicture\">\n"
"      <arg direction=\"in\" type=\"ay\" name=\"array\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isSync\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"errorcode\"/>\n"
"    </method>\n"
"    <signal name=\"signalOCRResult\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    OcrAdaptor(QObject *parent);
    virtual ~OcrAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int sendpicture(const QByteArray &array, bool isSync);
    int sendpictureByPath(const QString &path, bool isSync);
Q_SIGNALS: // SIGNALS
    void signalOCRResult(const QString &result);
};

#endif
