/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/org.freedesktop.DisplayManager.Session.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.SessionAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.Session.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.SessionAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SessionAdaptor
 */

SessionAdaptor::SessionAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SessionAdaptor::~SessionAdaptor()
{
    // destructor
}

QDBusObjectPath SessionAdaptor::seat() const
{
    // get the value of property Seat
    return qvariant_cast< QDBusObjectPath >(parent()->property("Seat"));
}

QString SessionAdaptor::userName() const
{
    // get the value of property UserName
    return qvariant_cast< QString >(parent()->property("UserName"));
}

void SessionAdaptor::Lock()
{
    // handle method call org.freedesktop.DisplayManager.Session.Lock
    QMetaObject::invokeMethod(parent(), "Lock");
}

