/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/org.freedesktop.DisplayManager.Seat.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.SeatAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.Seat.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/org.freedesktop.DisplayManager.SeatAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SeatAdaptor
 */

SeatAdaptor::SeatAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SeatAdaptor::~SeatAdaptor()
{
    // destructor
}

bool SeatAdaptor::canSwitch() const
{
    // get the value of property CanSwitch
    return qvariant_cast< bool >(parent()->property("CanSwitch"));
}

bool SeatAdaptor::hasGuestAccount() const
{
    // get the value of property HasGuestAccount
    return qvariant_cast< bool >(parent()->property("HasGuestAccount"));
}

QList<QDBusObjectPath> SeatAdaptor::sessions() const
{
    // get the value of property Sessions
    return qvariant_cast< QList<QDBusObjectPath> >(parent()->property("Sessions"));
}

void SeatAdaptor::Lock()
{
    // handle method call org.freedesktop.DisplayManager.Seat.Lock
    QMetaObject::invokeMethod(parent(), "Lock");
}

void SeatAdaptor::SwitchToGreeter()
{
    // handle method call org.freedesktop.DisplayManager.Seat.SwitchToGreeter
    QMetaObject::invokeMethod(parent(), "SwitchToGreeter");
}

void SeatAdaptor::SwitchToGuest(const QString &session_name)
{
    // handle method call org.freedesktop.DisplayManager.Seat.SwitchToGuest
    QMetaObject::invokeMethod(parent(), "SwitchToGuest", Q_ARG(QString, session_name));
}

void SeatAdaptor::SwitchToUser(const QString &username, const QString &session_name)
{
    // handle method call org.freedesktop.DisplayManager.Seat.SwitchToUser
    QMetaObject::invokeMethod(parent(), "SwitchToUser", Q_ARG(QString, username), Q_ARG(QString, session_name));
}

