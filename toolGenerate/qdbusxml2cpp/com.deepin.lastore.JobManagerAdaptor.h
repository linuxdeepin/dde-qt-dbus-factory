/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.lastore.JobManager.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.JobManagerAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.JobManager.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_LASTORE_JOBMANAGERADAPTOR_H
#define COM_DEEPIN_LASTORE_JOBMANAGERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.lastore.JobManager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.lastore.Manager
 */
class ManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.lastore.Manager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.lastore.Manager\">\n"
"    <method name=\"ClassifiedUpgrade\">\n"
"      <arg direction=\"in\" type=\"t\"/>\n"
"      <arg direction=\"out\" type=\"ao\"/>\n"
"    </method>\n"
"    <method name=\"CleanArchives\">\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"CleanJob\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"GetArchivesInfo\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"DistUpgrade\">\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"InstallPackage\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"PackageDesktopPath\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"PackageExists\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"PackageInstallable\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"PackagesDownloadSize\">\n"
"      <arg direction=\"in\" type=\"as\"/>\n"
"      <arg direction=\"out\" type=\"x\"/>\n"
"    </method>\n"
"    <method name=\"PauseJob\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"PrepareDistUpgrade\">\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"RecordLocaleInfo\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"RemovePackage\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"SetAutoClean\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"SetLogger\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SetRegion\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"StartJob\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"UpdatePackage\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"UpdateSource\">\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <property access=\"read\" type=\"ao\" name=\"JobList\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"SystemArchitectures\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"UpgradableApps\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"SystemOnChanging\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"AutoClean\"/>\n"
"    <property access=\"readwrite\" type=\"t\" name=\"UpdateMode\"/>\n"
"  </interface>\n"
        "")
public:
    ManagerAdaptor(QObject *parent);
    virtual ~ManagerAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool AutoClean READ autoClean)
    bool autoClean() const;

    Q_PROPERTY(QList<QDBusObjectPath> JobList READ jobList)
    QList<QDBusObjectPath> jobList() const;

    Q_PROPERTY(QStringList SystemArchitectures READ systemArchitectures)
    QStringList systemArchitectures() const;

    Q_PROPERTY(bool SystemOnChanging READ systemOnChanging)
    bool systemOnChanging() const;

    Q_PROPERTY(qulonglong UpdateMode READ updateMode WRITE setUpdateMode)
    qulonglong updateMode() const;
    void setUpdateMode(qulonglong value);

    Q_PROPERTY(QStringList UpgradableApps READ upgradableApps)
    QStringList upgradableApps() const;

public Q_SLOTS: // METHODS
    QList<QDBusObjectPath> ClassifiedUpgrade(qulonglong in0);
    QDBusObjectPath CleanArchives();
    void CleanJob(const QString &in0);
    QDBusObjectPath DistUpgrade();
    QString GetArchivesInfo();
    QDBusObjectPath InstallPackage(const QString &in0, const QString &in1);
    QString PackageDesktopPath(const QString &in0);
    bool PackageExists(const QString &in0);
    bool PackageInstallable(const QString &in0);
    qlonglong PackagesDownloadSize(const QStringList &in0);
    void PauseJob(const QString &in0);
    QDBusObjectPath PrepareDistUpgrade();
    void RecordLocaleInfo(const QString &in0);
    QDBusObjectPath RemovePackage(const QString &in0, const QString &in1);
    void SetAutoClean(bool in0);
    void SetLogger(const QString &in0, const QString &in1, const QString &in2);
    void SetRegion(const QString &in0);
    void StartJob(const QString &in0);
    QDBusObjectPath UpdatePackage(const QString &in0, const QString &in1);
    QDBusObjectPath UpdateSource();
Q_SIGNALS: // SIGNALS
};

#endif
