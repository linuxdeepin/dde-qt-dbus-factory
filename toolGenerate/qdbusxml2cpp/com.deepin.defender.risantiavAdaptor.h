/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.defender.risantiav.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.risantiavAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.risantiav.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DEFENDER_RISANTIAVADAPTOR_H
#define COM_DEEPIN_DEFENDER_RISANTIAVADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.defender.risantiav.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.defender.risantiav
 */
class RisantiavAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.defender.risantiav")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.defender.risantiav\">\n"
"    <method name=\"StartApp\"/>\n"
"    <method name=\"ExitApp\"/>\n"
"    <method name=\"SetScanFileSize\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"nSize\"/>\n"
"    </method>\n"
"    <method name=\"GetRisingLocalVersion\"/>\n"
"    <method name=\"GetRisingSrvVersion\"/>\n"
"    <method name=\"UpdateVersion\"/>\n"
"    <method name=\"SetScanStatus\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"status\"/>\n"
"    </method>\n"
"    <method name=\"GetScanStatus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"status\"/>\n"
"    </method>\n"
"    <method name=\"DoDissection\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"bAllDissection\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"sDissectionPath\"/>\n"
"    </method>\n"
"    <method name=\"RepairProblemFile\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"sPath\"/>\n"
"    </method>\n"
"    <method name=\"TrustProblemFile\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"bFlag\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"sPath\"/>\n"
"    </method>\n"
"    <method name=\"IsolationProblemFile\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"bFlag\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"sPath\"/>\n"
"    </method>\n"
"    <method name=\"QueryTrustFiles\"/>\n"
"    <method name=\"QueryIsolationFiles\"/>\n"
"    <method name=\"SelectTrustAreaSize\"/>\n"
"    <method name=\"SelectIsolationAreaSize\"/>\n"
"    <method name=\"SetVriusUpdateAddress\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"address\"/>\n"
"    </method>\n"
"    <signal name=\"SendLocalVersion\">\n"
"      <arg type=\"s\" name=\"version\"/>\n"
"    </signal>\n"
"    <signal name=\"SendSrvVersion\">\n"
"      <arg type=\"s\" name=\"version\"/>\n"
"    </signal>\n"
"    <signal name=\"SendUpdateVersionResult\">\n"
"      <arg type=\"b\" name=\"result\"/>\n"
"    </signal>\n"
"    <signal name=\"DissectionFinished\"/>\n"
"    <signal name=\"SendDissectionProgInfo\">\n"
"      <arg type=\"s\" name=\"path\"/>\n"
"      <arg type=\"d\" name=\"progress\"/>\n"
"      <arg type=\"i\" name=\"type\"/>\n"
"      <arg type=\"s\" name=\"sDetailInfo\"/>\n"
"    </signal>\n"
"    <signal name=\"SetScanStatusFinished\">\n"
"      <arg type=\"i\" name=\"status\"/>\n"
"    </signal>\n"
"    <signal name=\"SendOperationRepairFileResult\">\n"
"      <arg type=\"s\" name=\"file\"/>\n"
"    </signal>\n"
"    <signal name=\"SendOperationTrustFileResult\">\n"
"      <arg type=\"s\" name=\"file\"/>\n"
"    </signal>\n"
"    <signal name=\"SendOperationIsolationFileResult\">\n"
"      <arg type=\"s\" name=\"file\"/>\n"
"    </signal>\n"
"    <signal name=\"SendQueryTrustFiles\">\n"
"      <arg type=\"s\" name=\"files\"/>\n"
"    </signal>\n"
"    <signal name=\"SendQueryIsolationFiles\">\n"
"      <arg type=\"s\" name=\"files\"/>\n"
"    </signal>\n"
"    <signal name=\"SendTrustAreaSize\">\n"
"      <arg type=\"i\" name=\"size\"/>\n"
"    </signal>\n"
"    <signal name=\"SendIsolationAreaSize\">\n"
"      <arg type=\"i\" name=\"size\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    RisantiavAdaptor(QObject *parent);
    virtual ~RisantiavAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void DoDissection(bool bAllDissection, const QString &sDissectionPath);
    void ExitApp();
    void GetRisingLocalVersion();
    void GetRisingSrvVersion();
    int GetScanStatus();
    void IsolationProblemFile(bool bFlag, const QString &sPath);
    void QueryIsolationFiles();
    void QueryTrustFiles();
    void RepairProblemFile(const QString &sPath);
    void SelectIsolationAreaSize();
    void SelectTrustAreaSize();
    void SetScanFileSize(int nSize);
    void SetScanStatus(int status);
    void SetVriusUpdateAddress(const QString &address);
    void StartApp();
    void TrustProblemFile(bool bFlag, const QString &sPath);
    void UpdateVersion();
Q_SIGNALS: // SIGNALS
    void DissectionFinished();
    void SendDissectionProgInfo(const QString &path, double progress, int type, const QString &sDetailInfo);
    void SendIsolationAreaSize(int size);
    void SendLocalVersion(const QString &version);
    void SendOperationIsolationFileResult(const QString &file);
    void SendOperationRepairFileResult(const QString &file);
    void SendOperationTrustFileResult(const QString &file);
    void SendQueryIsolationFiles(const QString &files);
    void SendQueryTrustFiles(const QString &files);
    void SendSrvVersion(const QString &version);
    void SendTrustAreaSize(int size);
    void SendUpdateVersionResult(bool result);
    void SetScanStatusFinished(int status);
};

#endif
