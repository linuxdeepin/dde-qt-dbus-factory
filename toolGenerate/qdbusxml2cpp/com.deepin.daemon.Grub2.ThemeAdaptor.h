/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-qt-dbus-factory/xml/com.deepin.daemon.Grub2.Theme.xml -a ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Grub2.ThemeAdaptor -i ./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Grub2.Theme.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_GRUB2_THEMEADAPTOR_H
#define COM_DEEPIN_DAEMON_GRUB2_THEMEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-qt-dbus-factory/toolGenerate/qdbusxml2cpp/com.deepin.daemon.Grub2.Theme.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.Grub2.Theme
 */
class ThemeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.Grub2.Theme")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.Grub2.Theme\">\n"
"    <method name=\"GetBackground\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SetBackgroundSourceFile\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SetItemColor\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"SetSelectedItemColor\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <signal name=\"BackgroundChanged\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Updating\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"ItemColor\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"SelectedItemColor\"/>\n"
"  </interface>\n"
        "")
public:
    ThemeAdaptor(QObject *parent);
    virtual ~ThemeAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString ItemColor READ itemColor)
    QString itemColor() const;

    Q_PROPERTY(QString SelectedItemColor READ selectedItemColor)
    QString selectedItemColor() const;

    Q_PROPERTY(bool Updating READ updating)
    bool updating() const;

public Q_SLOTS: // METHODS
    QString GetBackground();
    void SetBackgroundSourceFile(const QString &in0);
    void SetItemColor(const QString &in0);
    void SetSelectedItemColor(const QString &in0);
Q_SIGNALS: // SIGNALS
    void BackgroundChanged();
};

#endif
